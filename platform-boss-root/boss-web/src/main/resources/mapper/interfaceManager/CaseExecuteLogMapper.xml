<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.boss.platform.dao.interfaceManager.CaseExecuteLogMapper">
    <resultMap id="BaseResultMap" type="cn.boss.platform.bean.interfaceManager.CaseExecuteLogBean">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="project_id" jdbcType="INTEGER" property="projectId"/>
        <result column="group_id" jdbcType="INTEGER" property="groupId"/>
        <result column="interface_id" jdbcType="INTEGER" property="interfaceId"/>
        <result column="env_id" jdbcType="INTEGER" property="envId"/>
        <result column="task_id" jdbcType="INTEGER" property="taskId"/>
        <result column="serial_id" jdbcType="INTEGER" property="serialId"/>
        <result column="case_id" jdbcType="INTEGER" property="caseId"/>
        <result column="batch_id" jdbcType="INTEGER" property="batchId"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="response_result" jdbcType="VARCHAR" property="responseResult"/>
        <result column="response_status" jdbcType="INTEGER" property="responseStatus"/>
        <result column="parameters" jdbcType="VARCHAR" property="parameters"/>

        <result column="expected_status" jdbcType="INTEGER" property="expectedStatus"/>
        <result column="expected_result" jdbcType="VARCHAR" property="expectedResult"/>
        <result column="result" jdbcType="INTEGER" property="result"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="exec_time" jdbcType="INTEGER" property="execTime"/>
    </resultMap>

    <!--添加用例执行日志-->
    <insert id="addLog" parameterType="cn.boss.platform.bean.interfaceManager.CaseExecuteLogBean">
    insert into boss_case_execute_log_tb(project_id, group_id, interface_id, env_id,task_id,serial_id,case_id,batch_id,url,response_result,response_status,parameters,expected_status,expected_result,result,exec_time,create_time,author)
    values(#{projectId}, #{groupId}, #{interfaceId}, #{envId}, #{taskId},#{serialId},#{caseId},#{batchId},#{url},#{responseResult},#{responseStatus},#{parameters},#{expectedStatus},#{expectedResult},#{result},#{execTime},#{createTime},#{author})
  </insert>

    <!--查询单条用例执行日志，返回list -->
    <select id="selectLogByCaseId" parameterType="map" resultMap="BaseResultMap">
        select * from boss_case_execute_log_tb where case_id = ${caseId}
        order by create_time desc limit #{skip},#{take}
    </select>

    <!--查询单条batch用例执行日志，返回list -->
    <select id="selectLogByBatchId" parameterType="map" resultMap="BaseResultMap">
        select * from boss_case_execute_log_tb where batch_id = ${batchId}
        order by create_time desc limit #{skip},#{take}
    </select>

    <!--查询单条用例执行日志总数 -->
    <select id="selectLogCountByCaseId" resultType="java.lang.Integer">
        select count(1) from boss_case_execute_log_tb where case_id = ${caseId};
    </select>

    <!--查询单条batch用例执行日志总数 -->
    <select id="selectLogCountByBatchCaseId" resultType="java.lang.Integer">
        select count(1) from boss_case_execute_log_tb where batch_id = ${batchId};
    </select>

    <!--按serial_id分组查询,带有条件的每组第一条数据 -->
    <select id="executeLog" parameterType="map" resultMap="BaseResultMap">
        select a.* from boss_case_execute_log_tb a,(select max(id) id , serial_id from boss_case_execute_log_tb
        where 1=1
        <if test="projectId != null">
            AND project_id = ${projectId}
        </if>
        <if test="taskId != null">
            AND task_id = ${taskId}
        </if>
        <if test="startTime != null">
            AND create_time  &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime}
        </if>
        group by serial_id ) b where a.id = b.id and a.serial_id = b.serial_id
        <if test="serialId != null">
            AND a.serial_id = ${serialId}
        </if>
        AND task_id != 0
        order by a.create_time
        DESC limit #{startSize},#{pageSize}
    </select>

    <!--按serial_id分组查询,带有条件的日志总数-->
    <select id="executeLogCount" parameterType="map" resultType="java.lang.Integer">
        select count(*) from boss_case_execute_log_tb a,(select max(id) id , serial_id from boss_case_execute_log_tb
        where 1=1
        <if test="projectId != null">
            AND project_id = ${projectId}
        </if>
        <if test="taskId != null">
            AND task_id = ${taskId}
        </if>
        <if test="serialId != null">
            AND serial_id = ${serialId}
        </if>
        <if test="startTime != null">
            AND create_time  &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime}
        </if>
        AND task_id != 0
        group by serial_id ) b where a.id = b.id and a.serial_id = b.serial_id order by a.serial_id DESC
    </select>

    <!--条件查询执行成功的日志 -->
    <select id="getExecuteSucessCount" parameterType="map" resultType="java.lang.Integer">
        select count(*) from boss_case_execute_log_tb WHERE serial_id = #{serialId} and result='1'

    </select>

    <!--查询流水号执行日志总数 -->
    <select id="countBySerialId" resultType="java.lang.Integer">
        select count(1) from boss_case_execute_log_tb where serial_id = ${serialId};
    </select>

    <!--条件查询执行日志 -->
    <select id="getDetailExecuteLog" parameterType="map"  resultMap="BaseResultMap">
        select * from boss_case_execute_log_tb  where 1=1
        <if test="serialId != null">
            AND serial_id = #{serialId}
        </if>
        order by result,create_time DESC limit #{startSize},#{pageSize};
    </select>


    <!--条件查询单日某项目执行数 -->
    <select id="getDailyExecuteCases" parameterType="java.lang.String" resultType="cn.boss.platform.bean.interfaceManager.DailyCaseBean">
        select project_id,count(*) AS caseExecuteCount from boss_case_execute_log_tb  where 1=1 AND create_time LIKE '%${daily}%' GROUP BY project_id
    </select>


</mapper>